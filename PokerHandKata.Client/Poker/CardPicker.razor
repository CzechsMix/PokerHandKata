@using PokerHandKata.Core.PlayingCards;
<div class="row mb-3">
	<div class="col-2">
		<select class="form-select" @bind="RankString">
			@foreach(var rank in Rank.All())
			{
				<option value="@rank.ShortString">@rank.DisplayString</option>
			}
		</select>
	</div>
	<div class="col-2">
		<select class="form-select" @bind="SuitChar">
			@foreach(var suit in Suit.All())
			{
				<option value="@suit.SuitCharacter">@suit.SuitCharacter</option>
			}
		</select>
	</div>
</div>

<button class="btn btn-primary" @onclick="PickCard">Add Card To Hand</button>

@code {
	[Parameter]
	public required Action<PlayingCard> CardPicked { get; set; }

	public string RankString { get; set; } = Rank.Two.ShortString;
	public char SuitChar { get; set; } = Suit.Hearts.SuitCharacter;

	public void PickCard()
	{
		CardPicked(new PlayingCard(
			Rank.From(RankString, err => throw new ArgumentException(err))!,
			Suit.From(SuitChar, err => throw new ArgumentException(err))!
		));
	}
}
